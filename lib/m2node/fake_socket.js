// Generated by CoffeeScript 1.3.3
(function() {
  var FakeSocket, events, util,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  util = require('util');

  events = require('events');

  FakeSocket = (function(_super) {

    __extends(FakeSocket, _super);

    function FakeSocket() {
      this.writeBuffer = new Buffer('');
      this.writable = true;
      this._writableState = {needDrain : false};
    }

    FakeSocket.prototype.destroy = function() {};

    FakeSocket.prototype.destroySoon = function() {};


    FakeSocket.prototype.emitData = function(buffer) {
      if (this._events && this._events['data']) {
        this.emit('data', buffer);
      }
      if (this.ondata) {
        return this.ondata(buffer, 0, buffer.length);
      }
    };

    FakeSocket.prototype.setTimeout = function(timeout, callback) {};

    FakeSocket.prototype.write = function(data) {

      this.writeBuffer = new Buffer(data)

      return this.emit('write');
    };

    return FakeSocket;

  })(events.EventEmitter);

  exports.FakeSocket = FakeSocket;

}).call(this);
